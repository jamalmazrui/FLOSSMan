<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <meta name="author" content="The Contributors" />
  <title>Terminal</title>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<header>
<h1 class="title">Terminal</h1>
<p class="author">The Contributors</p>
<p class="date">2011.03.14-03.43</p>
</header>
<p><span id="ch001_basiccommands.xhtml"></span></p>
<h1>Basic Commands</h1>
<p>The <strong>Terminal Activity</strong> is the most powerful method of interacting with <strong>Sugar</strong>.  However if you are not used to it then knowing some basics can help. The best strategy is to start using some simple commands. Don't attempt to do all your work from the command line straight away. Learn a few commands, use them and add to your understanding of what they can do over time.</p>
<p>Below are some basic commands that you could try starting with. Don't try and learn all of these at once. Just choose a few and practice them.<br />
</p>
<ul>
<li>ls<br />
</li>
<li>cd</li>
<li>mkdir</li>
<li>pwd<br />
</li>
<li>mv</li>
<li>rm</li>
<li>cp</li>
<li>ping</li>
<li>less</li>
<li>date</li>
<li>cat</li>
<li>top<br />
</li>
</ul>
<p>So, let's have a look at each. Feel free to experiment with these commands. Be a little careful as it is possible to do some damage to your computer if you are too casual. If there is a possibility one of the commands can accidentally create havoc then a note warns you about that.<br />
</p>
<h2><span id="ch001_basiccommands.xhtml#ls"></span> ls</h2>
<p>The <strong>ls</strong> c<code></code>ommand is the <strong>List</strong> command. You can use this to list the contents of any directory you are in. Try typing this command in a terminal window and see what you get. Now, one feature of  commands is that you can add various parameters to them. This is quite a simple thing to do, and refines the way you use the command. Usually these parameters are added to the command by typing a &quot; - &quot; directly after the command and then the parameter names or abbreviations. For example if you type the following:</p>
<pre><code>ls -l</code></pre>
<p>Then you are <em>passing</em> the <strong>l</strong> <code></code>parameter to the <strong>ls</strong> c<code></code>ommand. The <strong>l</strong> p<code></code>arameter is short for &quot;long list&quot;. This format gives more information than just typing the <strong>ls</strong><code></code> command by itself... Try the two out and compare the difference.</p>
<p>You might well ask, &quot;How do I know what the parameters are for each command?&quot; This information can be found by using the &quot;help&quot; parameter for <strong>ls</strong>:</p>
<pre><code>ls --help</code></pre>
<p>For the <strong>ls</strong> c<code></code>ommand you should get familiar with the formats using <strong>ls</strong> by <code></code>itself, as well as <strong>ls -al</strong><code></code>, and <strong>ls -l</strong><code></code></p>
<h2><span id="ch001_basiccommands.xhtml#cd"></span> cd</h2>
<p><strong>cd</strong> is the most common command used to navigate the file system on your computer. <strong>cd</strong> s<code></code>tands for <strong>Change Directory</strong>. Try it out by typing <strong>ls</strong> t<code></code>o get a list of all the files and folders in the directory you are currently in. Now try typing <strong>cd</strong> f<code></code>ollowed by the name of one of the files in the list, for example if there was a file called &quot;me.txt&quot;<code></code> you could type:</p>
<pre><code>cd me.txt</code></pre>
<p>This gives an error! Why? Because you can't change to a directory if it is a file. It's good to try this so that you understand that you can't do any damage by making a mistake with <strong>cd</strong>.<code></code> To change to a directory you type <strong>cd</strong> f<code></code>ollowed by the name of a directory you want to navigate to. If there was a directory called &quot;src&quot; you would type:</p>
<pre><code>cd src</code></pre>
<p>If that was successful then the terminal won't throw up an error. Try it with a real directory on your computer. If you fail it is because either you don't have permissions to enter the directory, you misspelled the directory name, or the directory simply doesn't exist.</p>
<h2><span id="ch001_basiccommands.xhtml#mkdir"></span> mkdir</h2>
<p>This is the command you used to create a directory.  It is short for <strong>Make Directory</strong>. To use this, simply type the name of the directory you want to create after the <strong>mkdir</strong> c<code></code>ommand as so:</p>
<pre><code>mkdir bleep</code></pre>
<p>The above command creates a directory called &quot;bleep&quot; in the current directory<code></code>. If a directory with this name already exists, you get an error but fortunately the computer doesn't overwrite the existing directory.<br />
</p>
<h2><span id="ch001_basiccommands.xhtml#pwd"></span> pwd</h2>
<p>If you get lost and don't know where you are in the file system you can always type <strong>pwd</strong> a<code></code>nd it tells you where you are. <strong>pwd</strong> means <strong>Present Working Directory</strong> - this command gives you the location or <em>absolute path</em> of where you are. For example, if you are in your <strong></strong> olpc<code></code> home directory, the output of the <strong>pwd</strong> c<code></code>ommand is:</p>
<pre><code>/home/olpc</code></pre>
<p>Experiment with changing directories with <strong>c<code></code>d</strong> then typing <strong>pwd</strong> t<code></code>o see where you are.</p>
<h2><span id="ch001_basiccommands.xhtml#mv"></span> mv</h2>
<p>This command is short for <strong>Move</strong>. It is as it sounds in that <strong>mv</strong> a<code></code>llows you to move files around on the computer. To use <strong>mv</strong> y<code></code>ou must first type the command, followed by the file you want to move and then the place where you want to move the file to. For example, if you wanted to move a file &quot;me.txt&quot; from your current directory to the &quot;/usr/bin&quot; directory you would type the following:</p>
<pre><code>mv me.txt /usr/bin</code></pre>
<p>Note: You don't have to type the filename in the path name where you want to move the file unless you also wish to change the name of the file. If for example while you were moving &quot;me.txt&quot; you wanted to change the filename to &quot;you.txt&quot; you would type:</p>
<pre><code>mv me.txt /usr/bin/you.txt</code></pre>
<p>If you just wanted to rename the file and not move it you could use <strong>mv</strong> <code></code>by typing this:</p>
<pre><code>mv me.txt you.txt</code></pre>
<p>Note that when you use <strong>mv</strong> yo<code></code>u are <em>moving</em> the file not copying it. Be a bit careful because you can overwrite files accidentally. If for example there is already a file named &quot;you.txt&quot; in the example above, is it overwritten with the data from &quot;me.txt&quot;. <code></code></p>
<h2><span id="ch001_basiccommands.xhtml#rm"></span> rm</h2>
<p><strong>rm</strong> is a command you should be <strong>very</strong> careful about using. <strong>rm</strong> i<code></code>s short for <strong>Remove</strong>, and is the command you use to delete a file or directory. To use this command type <strong>rm</strong> f<code></code>ollowed by the name of the file you wish to destroy for good. To remove a directory you can use the same command with the parameter <strong>-R</strong> like so:</p>
<pre><code>rm -R directoryname</code></pre>
<p>In this example &quot;directoryname&quot; <code></code>is the name of the directory you wish to delete. You can also use <strong>rmdir</strong> f<code></code>or this. Be EXTREMELY careful when using these commands. If used unwisely they could be the end of your operating system.</p>
<h2><span id="ch001_basiccommands.xhtml#cp"></span> cp</h2>
<p>This is short for <strong>Copy</strong>. Use it like <strong>mv</strong>, the only difference is that it leaves the original file where it was while also creating a copy.</p>
<h2><span id="ch001_basiccommands.xhtml#ping"></span> ping</h2>
<p>Not usually included in the top 10 commands you need to know but it's handy if you need to know if you are online. <strong>ping</strong> sends a request to any computer on the network. If that computer gets the request it responds. Type <strong>ping</strong> followed by a URL that you know, for example it might be a good idea to try the following:</p>
<pre><code>ping www.cnn.com</code></pre>
<p>If that computer gets the request you get some information coming back through the terminal... this keeps scrolling so to stop it type <strong>ctrl + c</strong>.</p>
<p>If you get no response from <strong>ping</strong> then you are probably offline. However, some machines online don't answer ping requests for security and other reasons, so make sure you really know that the machine you are pinging does reply to these requests. Some Internet connections won't allow <strong>ping</strong>.</p>
<h2><span id="ch001_basiccommands.xhtml#more"></span> less</h2>
<p>Use <strong>less</strong> if you want to control the overly verbose output of any command to the terminal. If for example, you are in a directory which contains 1000 files and you type <strong>ls</strong> the output of the command won't fit nicely into your little terminal window so it goes scrolling past faster than is useful. To slow it down so you can read the output try this:</p>
<pre><code>ls | less</code></pre>
<p>If you used this in your 1000 file directory you get one page at a time of output and pressing the <strong>spacebar</strong> shows the next page. Pressing <strong>q</strong> quits less. Ok, so you might be wondering what the funny straight line is in the above command... well, this is known as the <strong>pipe</strong> command.</p>
<p><strong>pipe</strong> allows you to combine commands together to control the kind of output you get, usually it's used to refine a command (which is what the command parameters also do). So, when you get really fluent with these commands you can write things that look more like equations but are really efficient ways of using standard commands... <strong>pipe</strong> will be central to enhancing your efficiency.</p>
<h2>date</h2>
<p>This command tells you the time and date as it is set on your computer.<br />
</p>
<h2>cat</h2>
<p><strong>cat</strong> displays the contents of files in your terminal window. You must type the name of the file you wish to display after <strong>cat</strong>. For example if you want to see the contents of the file &quot;README&quot; you would type:</p>
<pre><code>cat README</code></pre>
<p>If that file is too big to have its contents displayed in the terminal you might use it in combination with the <strong>less</strong> command like this:</p>
<pre><code>cat README | less</code></pre>
<h2>top</h2>
<p>The <strong>top</strong> command tells you which operations on your computer are using memory and your cpu. It's really only useful if you wish to see if there is an Activity or command slowing down your computer. The output of <strong>top</strong> continues running until you press <strong>q</strong>.<br />
</p>
<p><br />
</p>
<p><span id="ch002_combiningcommands.xhtml"></span></p>
<h1>Combining Commands</h1>
<p>You can combine commands using the <strong>Terminal</strong> <strong>Activity</strong>. There are many situations where this is very useful. For example, if you were to use <strong>ls</strong> the output to the terminal would be a list of all the files and folders in the directory you are currently in. If this is a very long list then the names of the files and folders flash past so quickly you cannot read them. So we can combine the <strong>ls</strong> command with another command so that we see the list of names one &quot;page&quot; at a time. To do this combine the <strong>ls</strong> command with the <strong>less</strong> command like this:</p>
<pre><code>ls | less</code></pre>
<p>Now the list of file and folder names fills up the display area in the terminal but stops when the terminal window is full. It then waits for you to press the <strong>spacebar</strong> to display the next &quot;page&quot;.</p>
<p>You combine commands by using the vertical line that you see in the example command. This must always go between the commands you wish to combine. This line is known as the &quot;pipe&quot; and in the above example we would say that we &quot;pipe ls through less&quot;. That is to say, the output of the <strong>ls</strong> command is fed through the <strong>less</strong> command.</p>
<p>You can actually string many commands together in this way. However it's good to remember that this does not always work!<br />
</p>
<p>What do you think this example does?</p>
<pre><code>ls | sort -r | cut -c1-3</code></pre>
<p>You can try it in various combinations to see what happens:</p>
<pre><code>ls | sort -r
ls | cut -c1-3</code></pre>
<p><br />
</p>
<p><span id="ch003_credits.xhtml"></span></p>
<h1><span id="ch003_credits.xhtml#License"></span> License</h1>
<p>All chapters copyright of the authors (see below). Unless otherwise stated all chapters in this manual licensed with <strong>GNU General Public License version 2</strong></p>
<p>This documentation is free documentation; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</p>
<p>This documentation is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
<p>You should have received a copy of the GNU General Public License along with this documentation; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
<h2><span id="ch003_credits.xhtml#Authors"></span> Authors</h2>
<p><em>BasicCommands</em><br />
© adam hyde 2008<br />
Modifications:<br />
Morgan Collett 2008<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>CombiningCommands</em><br />
© adam hyde 2008<br />
Modifications:<br />
Morgan Collett 2008<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>Credits</em><br />
© adam hyde 2006, 2007, 2008</p>
<hr />
<p><em>DirectoryStructure</em><br />
© adam hyde 2008<br />
Modifications:<br />
Anne Gentle 2008<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>EnteringCommands</em><br />
© adam hyde 2008<br />
Modifications:<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>HelpAboutCommands</em><br />
© adam hyde 2008<br />
Modifications:<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>Introduction</em><br />
© adam hyde 2006, 2007, 2008<br />
Modifications:<br />
Greg DeKoenigsberg 2008<br />
</p>
<hr />
<p><em>KeyboardCommands</em><br />
© adam hyde 2008<br />
Modifications:<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>StartingTheTerminal</em><br />
© adam hyde 2008<br />
Modifications:<br />
Greg DeKoenigsberg 2008<br />
Tom Boyle 2008<br />
</p>
<hr />
<p><em>UsingVI</em><br />
© adam hyde 2008<br />
Modifications:<br />
Morgan Collett 2008<br />
Tom Boyle 2008<br />
</p>
<hr />
<p> </p>
<p><a href="http://www.flossmanuals.net/"><img src="static/Floss-100-en.gif" alt="100.gif" width="110" height="54" /></a><br />
<strong></strong></p>
<p><sub>Free manuals for free software</sub></p>
<p> </p>
<p> </p>
<h2><span id="ch003_credits.xhtml#General%20Public%20License"></span> General Public License</h2>
<p>Version 2, June 1991</p>
<p>Copyright (C) 1989, 1991 Free Software Foundation, Inc.<br />
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA<br />
<br />
Everyone is permitted to copy and distribute verbatim copies<br />
of this license document, but changing it is not allowed.<br />
</p>
<p><strong>Preamble</strong></p>
<p>The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.</p>
<p>When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.</p>
<p>To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.</p>
<p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.</p>
<p>We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.</p>
<p>Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.</p>
<p>Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.</p>
<p>The precise terms and conditions for copying, distribution and modification follow.</p>
<p><strong>TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</strong></p>
<p><strong>0.</strong> This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The &quot;Program&quot;, below, refers to any such program or work, and a &quot;work based on the Program&quot; means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term &quot;modification&quot;.) Each licensee is addressed as &quot;you&quot;.</p>
<p>Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.</p>
<p><strong>1.</strong> You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.</p>
<p>You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.</p>
<p><strong>2.</strong> You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:</p>
<dl>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>a)</strong> You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.</p>
</dd>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>b)</strong> You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.</p>
</dd>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>c)</strong> If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)</p>
</dd>
</dl>
<p>These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.</p>
<p>Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.</p>
<p>In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.</p>
<p><strong>3.</strong> You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:</p>
<dl>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>a)</strong> Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</p>
</dd>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>b)</strong> Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</p>
</dd>
<dt>
<p><br />
</p>
</dt>
<dd>
<p><strong>c)</strong> Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)</p>
</dd>
</dl>
<p>The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.</p>
<p>If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.</p>
<p><strong>4.</strong> You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.</p>
<p><strong>5.</strong> You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.</p>
<p><strong>6.</strong> Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.</p>
<p><strong>7.</strong> If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.</p>
<p>If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.</p>
<p>It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.</p>
<p>This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.</p>
<p><strong>8.</strong> If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.</p>
<p><strong>9.</strong> The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p>
<p>Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and &quot;any later version&quot;, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.</p>
<p><strong>10.</strong> If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.</p>
<p><strong>NO WARRANTY</strong></p>
<p><strong>11.</strong> BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM &quot;AS IS&quot; WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>
<p><strong>12.</strong> IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>
<p><strong>END OF TERMS AND CONDITIONS</strong></p>
<p><span id="ch004_directorystructure.xhtml"></span></p>
<h1>File Structure</h1>
<p>If you open your Terminal Activity and type the following (followed by pressing the <strong>enter</strong> key):</p>
<pre><code>cd /</code></pre>
<p>You are placed in the top directory of your computer. If you then type:</p>
<pre><code>ls -l</code></pre>
<p>You see something similar to this:</p>
<p><img src="static/Terminal-Sugar-filestruture-en.png" title="filestruture" alt="filestruture" width="600" height="612" /><br />
</p>
<p>The above listing is what is known as the Sugar File Structure. Each name on the far right represents a directory, and each directory has a specific purpose. The <strong>lib</strong> d<code></code>irectory, for example contains code libraries that the software on your system uses. For now you only need to be concerned with one directory: the <strong>home</strong> directory. This directory contains folders that have names corresponding to each user of the machine. If you log in as &quot;adam&quot; for example then you are logged into a directory in the &quot;home&quot; directory with the same name as your username (&quot;adam&quot; in this example).</p>
<p>The other important thing to know is that Sugar is mostly comprised of text files, so you can change almost every part of Sugar - how it looks and works - by just editing the appropriate text file.</p>
<h2>To determine the IP address for your XO</h2>
<p>Make sure you are connected to the Internet by going to the Neighborhood View and clicking the icon for an open network. Wait until the network icon stops blinking and the outline for that icon turns to a white circle.<br />
</p>
<ol>
<li>Launch the Terminal Activity.</li>
<li>Type the following and press <strong>enter</strong>:</li>
</ol>
<pre><code>iwconfig</code></pre>
<p>In the line next to inetaddr: , look for the IP address for your laptop, such as 192.168.0.2.</p>
<ol>
</ol>
<h2>To transfer files to and from your XO laptop wirelessly</h2>
<p>To upload the file test.py from another computer to the computer running Sugar, such as the XO laptop so that it goes into /home/olpc, type this in a computer that has SCP installed:</p>
<pre><code>scp FILE_NAME USER@IP:TO_DIRECTORY </code></pre>
<p>For example:</p>
<pre><code>scp test.py olpc@192.168.0.2:/home/olpc</code></pre>
<p>To download the file /home/olpc/xo_test.py from the XO to a local computer, simply reverse the file names and locations like this example:<br />
</p>
<pre><code>scp olpc@192.168.0.2:/home/olpc/xo_test.py ./</code></pre>
<p><span id="ch005_enteringcommands.xhtml"></span></p>
<h1>Entering Commands</h1>
<p>Using the <strong>Terminal Activity</strong> is quite simple - you just need to type <strong>commands</strong> and press the <strong>enter</strong> key. The trick is knowing what to type and the basic structure of a command.</p>
<p>Let's look at entering a simple command into the terminal and then we will look at the structure of commands. Open the Terminal Activity and simply type the &quot;ls&quot; command and press <strong>enter</strong>:</p>
<p><img src="static/Terminal-Sugar-ls_1-en.png" title="ls_1" alt="ls_1" width="600" height="221" /> </p>
<p>You see something similar to the image above. &quot;ls&quot; is the command that lists files and directories. So the output of &quot;ls&quot; is a list of all the files and folders in the directory you are currently in.</p>
<h2>Parameters</h2>
<p>Next we move on to controlling commands a little bit more by asking them to do more specific actions. We do this by sending more specific requests to the commands - these are known as parameters and they are simply extra information that refine the command's actions.</p>
<p>The &quot;ls&quot; command has several of these parameters you can use. The &quot;a&quot; parameter, for example, means list <em>all</em> files and folders. To use this parameter we would type this:</p>
<pre><code>ls -a</code></pre>
<p>In the terminal you would then see something like this:</p>
<p><img src="static/Terminal-Sugar-lsa-en.png" title="lsa" alt="lsa" width="600" height="199" /><br />
</p>
<p>There are probably a few things you are wondering. Firstly - wasn't the &quot;ls&quot; command by itself meant to show all files and folders? Well, &quot;ls&quot; only lists items that are not hidden. If you use the &quot;a&quot; parameter then you see all the &quot;hidden files&quot; as well. Secondly you might wonder how you know what parameters are available for each command. Unfortunately in some installations of Sugar you do not have access to two very nice commands - &quot;man&quot; and &quot;info&quot;. These two commands would help a great deal because they are short manuals on all commands installed. The next best thing is to type the name of your command followed by &quot;--help&quot;. With the &quot;ls&quot; command we would type this:</p>
<pre><code>ls --help</code></pre>
<p>and the output would be information about the available parameters. Unfortunately there is often too much information to display and so it scrolls though the terminal window too quickly to read. If this is the case you need to combine the command with a &quot;more&quot; command like this:</p>
<pre><code>ls --help | more</code></pre>
<p>In the above example you would have as much information as can be displayed in the terminal window at one time. Then you press the <strong>spacebar</strong> and you see the next &quot;page&quot; of information etc.</p>
<p><br />
</p>
<p><span id="ch006_helpaboutcommands.xhtml"></span></p>
<h1>Getting Help on Commands</h1>
<p>To learn more about a command you can often type the command followed by either &quot;-h&quot; or &quot;--help&quot;. If you wish to learn more about the <strong>cat</strong> command type this:</p>
<pre><code>cat --help</code></pre>
<p>This shows you the following:</p>
<p><img src="static/Terminal-Sugar-cat-en.png" title="cat" alt="cat" width="600" height="487" /></p>
<p>The information displayed tells you how to use the <strong>cat</strong> command. At the top you can see that the help displays the basic pattern for using the command. This is noted by the &quot;Usage: cat [OPTION] [FILE] ...&quot; line.<br />
</p>
<p>This means that you should use the command by typing &quot;cat&quot; and then the parameters you wish to use (OPTION) and then the name of the file you wish <strong>cat</strong> to perform its operations on.</p>
<p>Then there is a short description of what the command does, in this case it says &quot;Concatenate FILES(s), or standard input to standard output&quot;. Sounds a bit mysterious and I am afraid this kind of information is not always very easy to understand. In this case it means that the command can be used to either join (&quot;concatenate&quot;) files or output a file referenced in the parameter (&quot;standard input&quot;) to the terminal display (&quot;standard output&quot;).</p>
<p>Then you have a list of parameters that you can use with the command and a short description of what they do. At the end are two examples of a &quot;typical&quot; use of <strong>cat</strong>.<br />
</p>
<p><span id="ch007_introduction.xhtml"></span></p>
<h1>The Terminal</h1>
<p>Most modern computers have two very different ways that you can interact with them: the <strong>Graphical User Interface</strong> (<strong>GUI</strong>) and the <strong>Command Line Interface</strong> (<strong>CLI</strong>).<br />
</p>
<p>Most users are familiar with GUIs.  When you use your mouse to point and click on things, you are using a GUI. It is very likely that you have never used the other type of interface: the CLI. With a CLI, you use text to control functions and software on your computer.</p>
<p>If you really want a fast way to work on your computer to change configurations, install software, or work remotely on another computer, then the command line is often the most efficient way to do it.<br />
</p>
<p>A type of CLI is the <strong>Terminal</strong>. In the Sugar world we call this the <strong>Terminal Activity</strong>.</p>
<p><img src="static/Terminal-Sugar-term-en.png" title="term" alt="term" width="600" height="387" /><br />
</p>
<p><span id="ch008_keyboardcommands.xhtml"></span></p>
<h1>Keyboard Commands</h1>
<p>There are several keyboard tricks that are good to know when using the Terminal Activity. These save time and work regardless of the commands you are using.</p>
<h2>CTRL L</h2>
<p>If you been doing a lot in your terminal and the terminal window is full of text you can press <strong>ctrl</strong> on the keyboard and <strong>l</strong> (lower case <strong>L</strong>) simultaneously and the terminal window is cleared of text leaving you with a nice clear terminal.<br />
</p>
<h2>CTRL C</h2>
<p>If for any reason you replace that a command you are using seems to be stuck or is taking too long you can use <strong>ctrl</strong> and <strong>c</strong> (pressed simultaneously) and this halts the command. This means your command will be stopped before it finishes so make sure you really want to do this before trying it.<br />
</p>
<h2>TAB Complete<br />
</h2>
<p>If you want to save some time typing out long commands you can always use the <strong>tab</strong> key. This is called &quot;Tab completion&quot;. If you have partly typed a command try pressing the <strong>tab</strong> key. If there are no other commands that start with the same sequence of letters then the complete command is automatically displayed in the terminal. Try for example typing half of the &quot;help&quot; command like this:</p>
<pre><code>hel</code></pre>
<p>followed by pressing <strong>tab</strong>. You see the terminal displays &quot;help&quot;. This is because the terminal &quot;knows&quot; that there are no other commands starting with &quot;hel&quot; so it assists you by completing the full command name when you press <strong>tab</strong>.</p>
<p>If there is more than one command that starts with the letters you have typed then pressing <strong>tab</strong> once does nothing. Try, for example, typing:</p>
<pre><code>he</code></pre>
<p>followed by the <strong>tab</strong> key. Nothing happens. Now try the same thing but press <strong>tab</strong> and quickly follow it by pressing <strong>tab</strong> again. In this case you see all the other commands displayed that start with &quot;he&quot; like so:</p>
<p><img src="static/Terminal-Sugar-help-en.png" title="help" alt="help" width="324" height="206" /></p>
<p>You can now see the other commands starting with these same letters and you can either choose one by typing out the whole command, or you can type some more letters of the command you want and finish it with &quot;Tab complete&quot;.<br />
</p>
<p><span id="ch009_startingtheterminal.xhtml"></span></p>
<h1>Starting the Terminal</h1>
<p>Starting the Terminal Activity is easy and quick.  You can do it either from your Home View or from the List View.</p>
<h2>Starting from Your Home View<br />
</h2>
<p>If you have added the <strong>Terminal Activity</strong> to your Home View, then just click it to start.</p>
<p><img src="static/Terminal-Sugar-openterm-en.png" title="openterm" alt="openterm" width="248" height="178" /></p>
<p>The <strong>Terminal</strong> then opens.</p>
<p><img src="static/Terminal-Sugar-term-en.png" title="term" alt="term" width="600" height="387" /></p>
<h2>Starting from List View</h2>
<p>If the Terminal is not added to your home page, you must start it from the <strong>List View</strong>. You can access the List View from the Home View by clicking its icon:</p>
<p><img src="static/Terminal-Sugar-screenshot02_1-en.png" title="screenshot02_1" alt="screenshot02_1" width="75" height="68" /></p>
<p>This shows you a list of Activities:</p>
<p><img src="static/Terminal-Sugar-listactivities_1-en.png" title="listactivities_1" alt="listactivities_1" width="600" height="563" /></p>
<p>If you scroll down the list (use the scroll bar on the right) you see the Terminal Activity listed. The colored stars you see mark the Activities that are on your Home View. The colorless stars are Activities that are not on the Home View. You can now either click the star next to the Terminal Activity to add it to your home page, or you can simply click the icon and the Terminal Activity starts.<br />
</p>
<p> </p>
<p><br />
</p>
<p><span id="ch010_usingvi.xhtml"></span></p>
<h1>vi</h1>
<p>Sugar has a built in text editor that you can use with the <strong>Terminal Activity</strong>. This editor is called <strong>vi</strong> and is used in many other types of <strong>operating systems</strong> such as <strong>Linux</strong>.  Let's have a quick look at <strong>vi</strong>: type <strong>vi</strong> in the terminal and you see something like this:</p>
<p><br />
<img src="static/Terminal-vi-vi-en.png" title="vi" alt="vi" width="600" height="454" /> </p>
<p>This is vim running <em>inside</em> the terminal. You can use vim as a text editor so that you don't need to open any other Activities to read or write most documents.<br />
</p>
<h2>Open a Text File<br />
</h2>
<p>To open a file with <strong>vi</strong> it is best if you type the name of the file you wish to open after the <strong>vi</strong> command, so that vim opens with the file already loaded. For example if you wanted to read the text file called &quot;MyExample.txt&quot; in the same directory you are currently working in then just type:</p>
<pre><code>vi MyExample.txt</code></pre>
<p>Note: If you the type the above and the file &quot;MyExample.txt&quot; does not exist then vi opens a new (blank) document.</p>
<p>If we assume there is a file called &quot;MyExample.txt&quot; then the above command opens vi with the file loaded as so:</p>
<p><img src="static/Terminal-vi-example-en.png" title="example" alt="example" width="600" height="185" /><br />
</p>
<h2>Simple Commands<br />
</h2>
<p>Now, vi may be quite a bit different than any text editor you have used before, so perhaps some explanation is needed. First, since vi works on the command line there are no menus to click to make things happen. Instead you must use the keyboard to type commands that vi understands. There are many commands you can use to work on the file and most of them are executed by just typing a single letter, or they are in the format:</p>
<pre><code>: command</code></pre>
<p>Where &quot;command&quot; is the name of the command you wish to use. The commands are all designated by shortcuts. An &quot;i&quot; , for example, is short for &quot;insert&quot;. The following is a table of vi commands you should know:</p>
<table>
<thead>
<tr class="header">
<th>command</th>
<th>action</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>i (only used in read-only mode)</td>
<td>insert text</td>
</tr>
<tr class="even">
<td>:w (only used in read-only mode)</td>
<td>write changes to file</td>
</tr>
<tr class="odd">
<td>u (only used in read-only mode)</td>
<td>undo changes</td>
</tr>
<tr class="even">
<td>:q (only used in read-only mode)</td>
<td>quit vim</td>
</tr>
</tbody>
</table>
<p>vi always opens a file initially in read-only mode. This means that when you first open the file you cannot change the file.  It is in this mode that you type the commands. At anytime you can press the <strong>esc</strong> (escape) key to return to read-only mode.</p>
<p>Let's look at some examples. First open a file as you did in the above example:<br />
</p>
<pre><code>vi MyExample.txt</code></pre>
<p>This opens the &quot;MyExample.txt&quot; file as explained above, or creates a new (blank) file if it did not already exist.</p>
<p>You can scroll up and down the file using the up and down arrows on your keyboard. </p>
<p>To insert new content or change the existing content of the file in vi you need to type:</p>
<pre><code>i</code></pre>
<p>This puts you in the insertion mode and now anything you type appears in the document itself. When you have finished making the changes you may wish to save the file. You would then press the <strong>esc</strong> key followed by:</p>
<pre><code>:w</code></pre>
<p>This writes the file with the new changes. You then need to quit from vi so you press the <strong>esc</strong> key followed by:</p>
<pre><code>:q</code></pre>
<p>Now replace a file and experiment. If you haven't used something like vim before then it might take some getting used to, so spend some time working out for yourself how vi works before you really need to use it.</p>
<p>If you want to get out of vi without saving your changes, use:</p>
<pre><code>:q!</code></pre>
<p>If the commands you are typing are going into the document instead of having an effect, remember to press <strong>esc</strong> first!</p>
<p>If you make a mistake when editing a document, press <strong>esc</strong> and then <strong>u</strong> for undo.</p>
<p> </p>
</body>
</html>
